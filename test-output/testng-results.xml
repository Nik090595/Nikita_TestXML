<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="11" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-22T22:23:05 IST" name="Regression" finished-at="2022-04-22T22:23:30 IST" duration-ms="24870">
    <groups>
    </groups>
    <test started-at="2022-04-22T22:23:05 IST" name="Zerodha" finished-at="2022-04-22T22:23:30 IST" duration-ms="24870">
      <class name="com.TestCases.TestCase_1">
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:05 IST" name="beforemethod" finished-at="2022-04-22T22:23:14 IST" duration-ms="8915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ClickOnNewAccount()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:14 IST" name="ClickOnNewAccount" finished-at="2022-04-22T22:23:17 IST" duration-ms="3018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnNewAccount -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:17 IST" name="aftermethod" finished-at="2022-04-22T22:23:17 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:17 IST" name="beforemethod" finished-at="2022-04-22T22:23:25 IST" duration-ms="7165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="TestCase()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:25 IST" name="TestCase" finished-at="2022-04-22T22:23:26 IST" duration-ms="1812" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=100.0.4896.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-AK9E0OM', ip: '192.168.109.34', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [77d8b0ec84e50f877e30b1012dda023b, sendKeysToElement {id=c2fa0598-9de5-4d7f-a239-4eca26ac6dcf, value=[Ljava.lang.CharSequence;@559cedee}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.127, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\Nikita\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64874}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64874/devtoo..., se:cdpVersion: 100.0.4896.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (77d8b0ec84e50f877e30b1012dda023b)] -> xpath: //input[@type='password']]
Session ID: 77d8b0ec84e50f877e30b1012dda023b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=100.0.4896.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-AK9E0OM', ip: '192.168.109.34', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [77d8b0ec84e50f877e30b1012dda023b, sendKeysToElement {id=c2fa0598-9de5-4d7f-a239-4eca26ac6dcf, value=[Ljava.lang.CharSequence;@559cedee}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.127, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\Nikita\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64874}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64874/devtoo..., se:cdpVersion: 100.0.4896.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (77d8b0ec84e50f877e30b1012dda023b)] -> xpath: //input[@type='password']]
Session ID: 77d8b0ec84e50f877e30b1012dda023b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy20.sendKeys(Unknown Source)
at com.POM.POM.EnterPin(POM.java:38)
at com.TestCases.TestCase_1.TestCase(TestCase_1.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:com.TestCases.TestCase_1@2fd1433e]" started-at="2022-04-22T22:23:26 IST" name="aftermethod" finished-at="2022-04-22T22:23:27 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.TestCases.TestCase_1 -->
      <class name="com.TestCases.TestNG">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:05 IST" name="beforetest" finished-at="2022-04-22T22:23:05 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:27 IST" name="beforeclass" finished-at="2022-04-22T22:23:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method signature="test2()[pri:-1, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:27 IST" name="test2" finished-at="2022-04-22T22:23:30 IST" duration-ms="3013" status="FAIL">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method com.TestCases.TestNG.test2() didn't finish within the time-out 3000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method com.TestCases.TestNG.test2() didn't finish within the time-out 3000
at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNewExecutor(MethodInvocationHelper.java:384)
at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:283)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:604)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:27 IST" name="beforemethod" finished-at="2022-04-22T22:23:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="aftermethod" finished-at="2022-04-22T22:23:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="beforemethod" finished-at="2022-04-22T22:23:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="test1()[pri:1, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="test1" finished-at="2022-04-22T22:23:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="aftermethod" finished-at="2022-04-22T22:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="afterclass" finished-at="2022-04-22T22:23:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:com.TestCases.TestNG@56cdfb3b]" started-at="2022-04-22T22:23:30 IST" name="aftertest" finished-at="2022-04-22T22:23:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- com.TestCases.TestNG -->
    </test> <!-- Zerodha -->
  </suite> <!-- Regression -->
</testng-results>
